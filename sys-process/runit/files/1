#!/bin/sh
# /etc/runit/1 - system one-time tasks
#
# This file runs OpenRC up to the "boot" runlevel to get your system into a
# reasonable state. If you need to add system-specific one-shot tasks, consider
# using OpenRC's existing /etc/local.d/ facility via the boot runlevel instead
# of editing this file, as it will be overwritten on upgrades.

PATH=/sbin:/usr/sbin:/bin:/usr/bin

RUNLEVEL=S /sbin/openrc sysinit
RUNLEVEL=S /sbin/openrc boot

# Spawn a login prompt if "single" is passed on the boot command line.
read -r kcmdline </proc/cmdline
case " $kcmdline " in
    *" single "* )
        /sbin/openrc single
        /sbin/sulogin
        exit 100
    ;;
esac

# Try to put runtime state into a common runtime location,
# so that /etc may be mounted readonly.
tmpstate="/run/runit"

findmnt -nt tmpfs /run > /dev/null && install -m 0755 -d "$tmpstate"
[ -d "$tmpstate" ] || exit 0 # may fail, that's fine.


tmpify() {
    cd "$1" || return

    if [ ! -L ./supervise ]; then
        rm -rfv ./supervise
        ln -Ts "$tmpstate"/"${PWD##*/}" ./supervise
    fi

    if [ -d ./log ] && [ ! -L ./log/supervise ]; then
        rm -rfv ./log/supervise
        ln -Ts "$tmpstate"/log."${PWD##*/}" ./log/supervise
    fi

    cd "$OLDPWD" || return
}

# Attempt to symlink each $sv's supervise/ directory to /run/runit/$sv,
# in order to avoid disk writes in /etc. Existing directories are replaced,
# existing symlinks and log services are untouched.
for sv in /etc/service/*/; do
    tmpify "$sv"
done

# Do the same for shutdown control files.
# In the worst case (the filesystem these reside on being wedged read-only)
# you'll still be able to poweroff, just not reboot.
for fn in reboot stopit; do
    [ -L /etc/runit/$fn ] && continue
    rm -fv /etc/runit/$fn
    ln -Ts "$tmpstate"/$fn /etc/runit/$fn
done
