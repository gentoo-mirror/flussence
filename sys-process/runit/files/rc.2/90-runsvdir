#!/bin/sh
# Invoke runsvdir, the normal runit stage 2.

# Seed runsvdir (mounted as tmpfs in rc.1) with the contents of /etc/service.
# N.B. Previously we had a complex dance spread over multiple rc files to
# surgically graft /etc/service/**/supervise directory symlinks to /run/runit/
# to reduce disk writes. This is much simpler.

runlevel_name="default"

# --copy-dirlinks is necessary because /etc/service/* may all be symlinks.
# We don't want to copy *all* links as their contents though.
rsync --archive --no-D --copy-dirlinks --exclude="supervise" \
    /etc/service/ "/etc/runit/runsvdir/${runlevel_name}/"

# Calling `runsvchdir ${runlevel_name}` here doesn't do this, unfortunately.
ln -s "./${runlevel_name}" /etc/runit/runsvdir/current

# Try to avoid supervised services flooding the active tty with their stdout by
# redirecting it elsewhere. The right thing to do instead of relying on this is
# configuring syslog or svlogd in each service so their stdout never ends up
# here in the first place, but doing so isn't always practical.
for console_device in /dev/tty12 /dev/ttyS1 /dev/kmsg; do
    if [ -c "${console_device}" ]; then
        echo "Redirecting runsvdir output to ${console_device}" >&2
        # shellcheck disable=SC2094
        exec <>"${console_device}" >"${console_device}" 2>"${console_device}"
        break
    fi
done

exec runsvdir -P /service
